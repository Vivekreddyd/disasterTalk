//
// Copyright 2017 Amazon.com, Inc. or its affiliates (Amazon). All Rights Reserved.
//
// Code generated by AWS Mobile Hub. Amazon gives unlimited permission to 
// copy, distribute and modify it.
//
// Source code generated from template: aws-my-sample-app-android v0.19
//
package com.disastertalk;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.os.Bundle;
import android.preference.Preference;
import android.preference.PreferenceManager;
import android.util.Log;
import android.view.MotionEvent;
import android.view.View;
import android.view.Window;
import android.widget.EditText;
import android.widget.ImageView;

import com.amazonaws.mobile.auth.core.IdentityManager;
import com.amazonaws.mobile.auth.core.StartupAuthErrorDetails;
import com.amazonaws.mobile.auth.core.StartupAuthResult;
import com.amazonaws.mobile.auth.core.StartupAuthResultHandler;
import com.amazonaws.mobile.config.AWSConfiguration;

/**
 * Splash Activity is the start-up activity that appears until a delay is expired
 * or the user taps the screen.  When the splash activity starts, various app
 * initialization operations are performed.
 */
public class SplashActivity extends Activity implements StartupAuthResultHandler {

    private static final String LOG_TAG = SplashActivity.class.getSimpleName();
    ImageView logo;
    EditText input_text;
    SharedPreferences sharedPref;
    public static final String KEY_DONE = "setup_done";
    public static final String USER_ID = "userid";

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        Log.d(LOG_TAG, "onCreate");

        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_splash);

        logo= (ImageView) findViewById(R.id.logo);
        logo.setImageResource(R.drawable.volunteer);

        input_text = (EditText) findViewById(R.id.userid);

        sharedPref = PreferenceManager.getDefaultSharedPreferences(this);
        final IdentityManager identityManager = IdentityManager.getDefaultIdentityManager();
        identityManager.doStartupAuth(this, this);

        Context appContext = getApplicationContext();
        AWSConfiguration awsConfig = new AWSConfiguration(appContext);
        IdentityManager identityManager1 = new IdentityManager(appContext, awsConfig);
        IdentityManager.setDefaultIdentityManager(identityManager1);
        identityManager1.doStartupAuth(this, new StartupAuthResultHandler() {
            @Override
            public void onComplete(StartupAuthResult startupAuthResult) {
                // User identity is ready as unauthenticated user or previously signed-in user.
            }
        });
    }

    @Override
    public boolean onTouchEvent(MotionEvent event) {
        // Touch event bypasses waiting for the splash timeout to expire.
        IdentityManager.getDefaultIdentityManager().expireSignInTimeout();
        return true;
    }

    @Override
    public void onComplete(StartupAuthResult authResult) {
        if (authResult.isUserAnonymous()) {
            Log.d(LOG_TAG, "Continuing with unauthenticated (guest) identity.");
        } else {
            final StartupAuthErrorDetails errors = authResult.getErrorDetails();
            Log.e(LOG_TAG, "No Identity could be obtained. Continuing with no identity.",
                    errors.getUnauthenticatedErrorException());
        }
        if (sharedPref.getBoolean(KEY_DONE, false)) {
            this.startActivity(new Intent(this, MainActivity.class)
                    .setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP));
            this.finish();
        }
    }

    public void onSubmit(View view) {
        sharedPref.edit().putString(USER_ID, input_text.getText().toString()).apply();
        sharedPref.edit().putBoolean(KEY_DONE, true).apply();
        this.startActivity(new Intent(this, MainActivity.class)
                .setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP));
        this.finish();
    }
}

